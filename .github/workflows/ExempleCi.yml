name: Build and push nodejs app to artifactory

on:
  #schedule:
  #- cron:  '0/5 * * * *'
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: cache-npm
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

        
      - name: Install dependencies
        run: npm install

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v4.0.0 # Ex: v4.0.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: save sonar raport
        run:
          |
          mkdir -p reports
          cp -r .scannerwork/* reports/
      - name: Configure Jfrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog Platform url
          JF_URL: https://${{ secrets.ARTIFACTORY_URL }} 
      
          # Basic authentication credentials
          JF_USER: ${{ secrets.ARTIFACTORY_USER }}
          JF_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
         
      - run:
          |
          # Ping the server
          jf rt ping
          # Collect environment variables for the build
          jf rt bce
          # Collect VCS details from git and add them to the build
          jf rt bag
          # Publish build info
          jf rt bp
          ./jfrog rt u repors/path/to/artifactory-repository/

          
      #- name: Configure artifactory
        #env:
          #ARTIFACTORY_USER_EMAIL: ${{ secrets.ARTIFACTORY_USER_EMAIL }}
          #ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          #ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
        #run:
          #|
          #echo "email = $ARTIFACTORY_USER_EMAIL
                #always-auth = true
                #registry=https://$ARTIFACTORY_URL/artifactory/api/npm/paris-npm/
                #//$ARTIFACTORY_URL/artifactory/api/npm/paris-npm/:_authToken=$ARTIFACTORY_PASSWORD" > ~/.npmrc

      #- name: Push to artifactory
        #env:
          #ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
        #run: npm publish --registry https://$ARTIFACTORY_URL/artifactory/api/npm/paris-npm/
